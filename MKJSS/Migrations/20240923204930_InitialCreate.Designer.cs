// <auto-generated />
using MKJSS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MKJSS.Migrations
{
    [DbContext(typeof(MKJSSContext))]
    [Migration("20240923204930_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MKJSS.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int");

                    b.Property<string>("LearnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LessonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LearnerId");

                    b.HasIndex("LessonId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("MKJSS.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("MKJSS.Models.Learner", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LessonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Learner");
                });

            modelBuilder.Entity("MKJSS.Models.Lesson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("LessonSize")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("MKJSS.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("LearnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LessonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("LearnerId");

                    b.HasIndex("LessonId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("MKJSS.Models.Booking", b =>
                {
                    b.HasOne("MKJSS.Models.Learner", "Learner")
                        .WithMany("Bookings")
                        .HasForeignKey("LearnerId");

                    b.HasOne("MKJSS.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.Navigation("Learner");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("MKJSS.Models.Learner", b =>
                {
                    b.HasOne("MKJSS.Models.Lesson", null)
                        .WithMany("Learners")
                        .HasForeignKey("LessonId");
                });

            modelBuilder.Entity("MKJSS.Models.Lesson", b =>
                {
                    b.HasOne("MKJSS.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("MKJSS.Models.Review", b =>
                {
                    b.HasOne("MKJSS.Models.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKJSS.Models.Learner", "Learner")
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MKJSS.Models.Lesson", "Lesson")
                        .WithMany("Reviews")
                        .HasForeignKey("LessonId");

                    b.Navigation("Coach");

                    b.Navigation("Learner");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("MKJSS.Models.Learner", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MKJSS.Models.Lesson", b =>
                {
                    b.Navigation("Learners");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
